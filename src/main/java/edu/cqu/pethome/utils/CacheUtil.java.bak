//package edu.cqu.pethome.utils;
//
//import cn.hutool.core.lang.TypeReference;
//import cn.hutool.core.util.BooleanUtil;
//import cn.hutool.core.util.StrUtil;
//import com.baomidou.mybatisplus.core.mapper.BaseMapper;
//import com.baomidou.mybatisplus.extension.service.IService;
//import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
//import com.fasterxml.jackson.core.JsonProcessingException;
//import com.fasterxml.jackson.databind.ObjectMapper;
//import edu.cqu.pethome.dto.Result;
//import edu.cqu.pethome.entities.Hospital;
//import lombok.extern.slf4j.Slf4j;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.data.redis.core.StringRedisTemplate;
//import org.springframework.stereotype.Component;
//
//import java.io.Serializable;
//import java.util.concurrent.TimeUnit;
//import java.util.function.Function;
//
//import static edu.cqu.pethome.utils.ConstantUtil.CACHE_HOSPITAL;
//import static edu.cqu.pethome.utils.ConstantUtil.LOCK;
//@Component
//@Slf4j
//public class CacheUtil<T> extends ServiceImpl<BaseMapper<T>,T> implements IService<T> {
//    @Autowired
//    private StringRedisTemplate stringRedisTemplate;
//    private ObjectMapper objectMapper=new ObjectMapper();
//
//    private boolean tryLock(String key){
//        Boolean flag = stringRedisTemplate.opsForValue().setIfAbsent(key,"1",10, TimeUnit.SECONDS);
//        return BooleanUtil.isTrue(flag);
//    }
//
//    private void unLock(String key){
//        stringRedisTemplate.delete(key);
//    }
//    public<ID extends Serializable> Result getByID(ID id, String constantPrefix, Class<T> objectClass) throws JsonProcessingException, InterruptedException {
//        //TODO 使用布隆过滤器，避免缓存击穿
//
//        // 使用互斥锁，避免缓存穿透
//        // 从缓存中查找对象信息
//        String objectString = stringRedisTemplate.opsForValue().get(constantPrefix + id);
//        // 如果找到了，直接返回
//        if (StrUtil.isNotBlank(objectString)) {
//            T object = objectMapper.readValue(objectString,objectClass);
//            return Result.ok(object);
//        }
//        if (tryLock(LOCK+id)) {
//            log.info("-------- [MYSQL] ---------");
//            //TODO 获取到锁，去数据库拿数据
//            // 如果没找到，向数据库发送请求
//            T object = getById(id);
//            if (object==null) {
//                //返回空结果给redis，防止缓存穿透
//                stringRedisTemplate.opsForValue().set(constantPrefix+id,null);
//                // 如果不存在该医院信息，返回空结果
//                return Result.err("好像出错了");
//            }
//            // 如果存在
//            // 添加结果到redis
//            String objectStr = objectMapper.writeValueAsString(object);
//            stringRedisTemplate.opsForValue().set(constantPrefix+id,objectStr);
//            stringRedisTemplate.expire(constantPrefix+id,30, TimeUnit.MINUTES);
//            // 做完了，记得释放锁
//            unLock(LOCK+id);
//
//            //返回结果给前端
//            return Result.ok(object);
//        }
//        //TODO 没获取锁，间隔一段时间，再获取一遍缓存
//        Thread.sleep(100);
//        return getByID(id,constantPrefix,objectClass);
//    }
//}
